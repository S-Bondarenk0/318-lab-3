#include <iostream>
#include <cmath>

// Функція перевірки високосного року
int checkLeapYear() {
    int year;
    std::cout << "\nПеревірка високосного року\n";
    std::cout << "Введіть номер року: ";
    std::cin >> year;

    if (year <= 0) {
        std::cerr << "Рік має бути додатнім числом.\n";
        return 1;
    }

    if ((year % 4 == 0 && year % 100 != 0) || (year % 400 == 0)) {
        std::cout << "Рік " << year << " є високосним і має 366 днів.\n";
    } else {
        std::cout << "Рік " << year << " є звичайним і має 365 днів.\n";
    }

    return 0;
}

// Функція перевірки точки в коричневій області для довільної чверті
bool isPointInBrownArea(double x, double y, double a) {
    double r = a / 2.0;  // Радіус кола

    // Перевірка для першої чверті
    bool inSector1 = (x >= 0 && y >= 0 && (x * x + y * y <= r * r));
    bool inTriangle1 = (x >= 0 && y >= 0 && y <= -x + r);

    // Перевірка для другої чверті
    bool inSector2 = (x <= 0 && y >= 0 && (x * x + y * y <= r * r));
    bool inTriangle2 = (x <= 0 && y >= 0 && y <= x + r);

    // Перевірка для третьої чверті
    bool inSector3 = (x <= 0 && y <= 0 && (x * x + y * y <= r * r));
    bool inTriangle3 = (x <= 0 && y <= 0 && y >= -x - r);

    // Перевірка для четвертої чверті
    bool inSector4 = (x >= 0 && y <= 0 && (x * x + y * y <= r * r));
    bool inTriangle4 = (x >= 0 && y <= 0 && y >= x - r);

    // Перевірка належності точці коричневій області для кожної чверті
    return (inSector1 && !inTriangle1) || (inSector2 && !inTriangle2) ||
           (inSector3 && !inTriangle3) || (inSector4 && !inTriangle4);
}

// Функція обчислення параметрів коричневої області
void calculateBrownArea() {
    std::cout << "\nРозрахунок параметрів коричневої області\n";

    double a;
    std::cout << "Введіть сторону квадрата a: ";
    std::cin >> a;

    if (a <= 0) {
        std::cerr << "Сторона квадрата має бути додатнім числом.\n";
        return;
    }

    double r = a / 2.0;

    // Розрахунок площі
    double sectorArea = (M_PI * r * r) / 4.0;  // Площа сектора
    double triangleArea = (a * a) / 4.0;      // Площа трикутника
    double brownArea = sectorArea - triangleArea;

    // Розрахунок периметра
    double arcLength = (M_PI * r) / 2.0;      // Довжина дуги сектора
    double brownPerimeter = arcLength + 2 * r; // Дуга + 2 радіуси

    // Вивід площі та периметра
    std::cout << "Площа коричневої області: " << brownArea << " квадратних одиниць.\n";
    std::cout << "Периметр коричневої області: " << brownPerimeter << " одиниць.\n";

    // Перевірка точки
    double x, y;
    std::cout << "\nВведіть координати точки (x, y): ";
    std::cin >> x >> y;

    if (isPointInBrownArea(x, y, a)) {
        std::cout << "Точка (" << x << ", " << y << ") належить коричневій області.\n";
    } else {
        std::cout << "Точка (" << x << ", " << y << ") не належить коричневій області.\n";
    }
}

int main() {
    // Меню для виконання задач
    int choice;
    std::cout << "Оберіть завдання:\n";
    std::cout << "1 - Перевірка високосного року\n";
    std::cout << "2 - Розрахунок параметрів коричневої області\n";
    std::cout << "Ваш вибір: ";
    std::cin >> choice;

    switch (choice) {
        case 1:
            checkLeapYear();
            break;
        case 2:
            calculateBrownArea();
            break;
        default:
            std::cerr << "Неправильний вибір. Завершення програми.\n";
    }

    return 0;
}
